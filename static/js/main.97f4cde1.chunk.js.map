{"version":3,"sources":["images/Kava-logo.svg","components/Landing/Landing.tsx","components/TotalTransactions/TotalTransactions.tsx","components/Median/Median.tsx","components/Average/Average.tsx","components/MaxTransaction/MaxTransaction.tsx","components/TransactionDataChart/TransactionDataChart.tsx","components/TransactionData/TransactionData.tsx","components/LoadingSpinner/LoadingSpinner.tsx","App.tsx","services/dataService.ts","reportWebVitals.ts","index.tsx","components/Landing/Landing.module.css","App.module.css","components/TransactionData/TransactionData.module.css","components/TransactionDataChart/TransactionDataChart.module.css"],"names":["Landing","props","displayData","className","Card","styles","info","Body","logo","src","alt","Button","button","onClick","TotalTransactions","totalTransactions","transactions","length","emphasize","Median","map","transaction","parseInt","shares","sort","a","b","sortedData","Math","floor","Average","averageTransaction","total","forEach","sum","MaxTransaction","largestTransaction","allShares","max","maxTransaction","maxInvestor","amount","relevantTransaction","find","delegator_address","findInvestor","DataChart","chartData","labels","datasets","label","data","fill","backgroundColor","borderColor","chart","Data","setShowData","Header","LoadingSpinner","Spinner","animation","variant","role","App","useState","setTransactions","showData","loading","setLoading","TransactionData","axios","get","then","app_state","staking","delegations","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97f4cde1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Kava-logo.9e44df28.svg\";","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport styles from './Landing.module.css';\nimport logo from '../../images/Kava-logo.svg'\n\ninterface Props {\n    displayData: () => void;\n}\n\nfunction Landing(props: Props) {\n    const { displayData } = props;\n\n    return (\n        <div className=\"col-sm-10 col-md-6 mx-auto mt-5\">\n            <Card className={styles.info}>\n                <Card.Body>\n                    <img className={styles.logo} src={logo} alt=\"logo\" />\n                    <Button className={styles.button} onClick={displayData}>Render Data</Button>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Landing;\n","import React from 'react';\nimport Transaction from '../../interfaces/Transaction';\nimport styles from '../TransactionData/TransactionData.module.css'\n\ninterface Props {\n    transactions: Transaction[];\n}\n\nfunction TotalTransactions(props: Props) {\n    const { transactions } = props;\n\n    const totalTransactions = transactions.length;\n\n    return (\n        <div>\n            There are <span className={styles.emphasize}>{totalTransactions}</span> total transactions\n        </div>\n    );\n}\n\nexport default TotalTransactions;","import React from 'react';\nimport Transaction from '../../interfaces/Transaction';\nimport styles from '../TransactionData/TransactionData.module.css'\n\ninterface Props {\n    transactions: Transaction[];\n}\n\nfunction Median(props: Props) {\n    const { transactions } = props;\n\n    function sortedData(transactions: Transaction[]) {\n        const allShares = transactions.map((transaction) => parseInt(transaction.shares));\n\n        return allShares.sort((a: number, b: number) => a - b);\n    }\n\n    function findMedianIndex() {\n        return Math.floor(transactions.length / 2 + 1);\n    }\n\n    function getMedianTransaction() {\n        const sortedTransactions: number[] = sortedData(transactions);\n        const medianIndex: number = findMedianIndex();\n        const medianTransaction: number = sortedTransactions[medianIndex];\n\n        return medianTransaction;\n    }\n\n    return (\n        <div>\n            The median value is <span className={styles.emphasize}>{getMedianTransaction()}</span>\n        </div>\n    );\n}\n\nexport default Median;","import React from 'react';\nimport Transaction from '../../interfaces/Transaction';\nimport styles from '../TransactionData/TransactionData.module.css';\n\ninterface Props {\n    transactions: Transaction[];\n}\n\nfunction Average(props: Props) {\n    const { transactions } = props;\n\n    function sum(transactions: Transaction[]) {\n        let total = 0;\n        transactions.forEach((transaction) => total += parseInt(transaction.shares));\n        return total;\n    }\n\n    const totalTransactions: number = transactions.length;\n    const averageTransaction: number = sum(transactions) / totalTransactions;\n    \n    return (\n        <div>\n            The average value of all transactions is <span className={styles.emphasize}>{averageTransaction}</span>\n        </div>\n    );\n}\n\nexport default Average;","import React from 'react';\nimport Transaction from '../../interfaces/Transaction';\nimport styles from '../TransactionData/TransactionData.module.css';\n\ninterface Props {\n    transactions: Transaction[];\n}\n\nfunction MaxTransaction(props: Props) {\n    const { transactions } = props;\n\n    function maxTransaction(transactions: Transaction[]) {\n        const allShares = transactions.map((transaction) => parseInt(transaction.shares));\n\n        return Math.max(...allShares);\n    }\n    \n    function findInvestor(transactions: Transaction[], amount: number) {\n        const relevantTransaction = transactions.find((transaction) => parseInt(transaction.shares) === amount);\n        return relevantTransaction && relevantTransaction.delegator_address;\n    }\n\n    const largestTransaction: number = maxTransaction(transactions);\n    const maxInvestor: string | undefined = findInvestor(transactions, largestTransaction);\n\n    return (\n        <div>\n            The maximum transaction value is <span className={styles.emphasize}>{largestTransaction}</span>\n            <br /> \n            and was made by <span className={styles.emphasize}>{maxInvestor}</span>\n        </div>\n    );\n}\n\nexport default MaxTransaction;","import React from \"react\";\nimport styles from './TransactionDataChart.module.css';\nimport { Line } from \"react-chartjs-2\";\nimport Transaction from \"../../interfaces/Transaction\";\n\ninterface Props {\n    transactions: Transaction[];\n}\n\ninterface Dataset {\n    label: string;\n    data: string[];\n    fill: boolean;\n    backgroundColor: string;\n    borderColor: string;\n}\n\ninterface Chart {\n    labels : string[];\n    datasets: Dataset[];\n}\n\nfunction DataChart(props: Props) {\n    const { transactions } = props;\n\n    const addresses: string[] = transactions.map((transaction: Transaction) => transaction.delegator_address);\n\n    const amounts: string[] = transactions.map((transaction: Transaction) =>  transaction.shares);\n\n    const chartData: Chart = {\n        labels: addresses,\n        datasets: [\n            {\n                label: \"Shares per delegation\",\n                data: amounts,\n                fill: true,\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"rgba(75,192,192,1)\"\n            },\n        ]\n    };\n    \n    return (\n        <div className={styles.chart}>\n            <Line data={chartData}/>\n        </div>\n    );\n}\n\nexport default DataChart;","import React from 'react';\nimport TotalTransactions from '../TotalTransactions/TotalTransactions';\nimport Median from '../Median/Median';\nimport Average from '../Average/Average';\nimport MaxTransaction from '../MaxTransaction/MaxTransaction';\nimport Chart from '../TransactionDataChart/TransactionDataChart';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport styles from './TransactionData.module.css';\nimport Transaction from '../../interfaces/Transaction';\n\ninterface Props {\n    transactions: Transaction[];\n    setShowData: (flagValue: boolean) => void;\n}\n\nfunction Data(props:Props) {\n    const { transactions, setShowData } = props;\n\n    return (\n        <>\n            <div className=\"col-sm-10 col-md-6 mx-auto mt-5\">\n                <Card className={styles.info}>\n                    <Card.Header>Data</Card.Header>\n                    <Card.Body>\n                        <TotalTransactions transactions={transactions}/>\n                        <Median transactions={transactions} />\n                        <Average transactions={transactions} />\n                        <MaxTransaction transactions={transactions} />\n                        <Button className={styles.button} \n                                onClick={() => setShowData(false)}>\n                            Return to Homepage\n                        </Button>\n                    </Card.Body>\n                </Card>\n            </div>\n            <div className=\"col-sm-10\">\n                <Chart transactions={transactions}/>\n            </div>\n        </>\n    );\n}\n\nexport default Data;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nfunction LoadingSpinner() {\n    return (\n        <div>\n            <Spinner animation=\"border\" variant=\"primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    );\n}\n\nexport default LoadingSpinner;\n","import styles from './App.module.css';\nimport { fetchData } from './services/dataService';\nimport React, { useState } from 'react';\nimport Landing from './components/Landing/Landing';\nimport TransactionData from './components/TransactionData/TransactionData';\nimport LoadingSpinner from './components/LoadingSpinner/LoadingSpinner';\n\nconst App: React.FC = () =>  {\n  const [transactions, setTransactions] = useState([]);\n  const [showData, setShowData] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const displayData = () => {\n    setLoading(true);\n    fetchData()\n      .then(({ data }) => {\n        setTransactions(data.app_state.staking.delegations);\n        setShowData(true);\n        setLoading(false);\n      });\n  }\n\n  if(!showData) {\n    return (\n      <div className={styles.App}>\n        <Landing displayData={displayData} />\n        {loading && <LoadingSpinner />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.App}>\n      <TransactionData setShowData={setShowData} transactions={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\n\nexport function fetchData(){\n    return axios.get(\"https://cors-anywhere.herokuapp.com/https://kava-3-snapshots.s3.amazonaws.com/kava-4-export-20210122.json\");\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Landing_button__wyUxN\",\"info\":\"Landing_info__XYEt3\",\"logo\":\"Landing_logo__1SVgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TransactionData_button__2vqUG\",\"emphasize\":\"TransactionData_emphasize__1f3kD\",\"info\":\"TransactionData_info__2ZbqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"TransactionDataChart_chart__24HDQ\"};"],"sourceRoot":""}